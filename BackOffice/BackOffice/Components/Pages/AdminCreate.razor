@page "/createadmin"
@using BackOffice.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc
@using System.ComponentModel.DataAnnotations

@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Create an admin</h3>

<EditForm Model="model" OnValidSubmit="CreateAdmin" FormName="registeradmin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="model.Email" />
        <ValidationMessage For="@(() => model.Email)" />
    </div>
    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="model.Password" />
        <ValidationMessage For="@(() => model.Password)" />
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

@code {

    [SupplyParameterFromForm]
    private CreateAdminModel model { get; set; } = new();

    private async Task CreateAdmin()
    {
        var user = new ApplicationUser
            {
                UserName = model.Email,
                Email = model.Email
            };

        var result = await UserManager.CreateAsync(user, model.Password);

        if (result.Succeeded)
        {
            await UserManager.AddToRoleAsync(user, "Admin");
            NavigationManager.NavigateTo("/admins");
        }
        else
        {
            // Handle errors, maybe display validation messages
        }
    }

    public class CreateAdminModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email format")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required")]
        [DataType(DataType.Password)]
        public string Password { get; set; }
    }
}